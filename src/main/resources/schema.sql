DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS film CASCADE;
DROP TABLE IF EXISTS genre CASCADE;
DROP TABLE IF EXISTS rating CASCADE;
DROP TABLE IF EXISTS film_genres CASCADE;
DROP TABLE IF EXISTS friends CASCADE;
DROP TABLE IF EXISTS likes CASCADE;

CREATE TABLE IF NOT EXISTS users  (
    user_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    login varchar(100) NOT NULL,
    user_name varchar(100) NOT NULL,
    email varchar(100) NOT NULL,
    birthday timestamp
);
CREATE TABLE IF NOT EXISTS film (
    film_id INTEGER GENERATED  BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(100) NOT NULL,
    description varchar(100) NOT NULL,
    release_date date,
    duration INTEGER,
    rating_id INTEGER
);
CREATE TABLE IF NOT EXISTS friends (
    user_id INTEGER REFERENCES users(user_id) ON DELETE CASCADE,
    friend_id INTEGER REFERENCES users(user_id) ON DELETE CASCADE,
    PRIMARY KEY(user_id,friend_id)
);
CREATE TABLE IF NOT EXISTS likes (
        user_id INTEGER REFERENCES users(user_id) ON DELETE CASCADE,
        film_id INTEGER REFERENCES film(film_id) ON DELETE CASCADE,
        PRIMARY KEY(user_id,film_id)
);

CREATE TABLE rating (
    rating_id INTEGER GENERATED  BY DEFAULT AS IDENTITY PRIMARY KEY,
    rating_name varchar(50)
);
CREATE TABLE genre (
    genre_id INTEGER GENERATED  BY DEFAULT AS IDENTITY PRIMARY KEY,
    genre_name varchar
);

CREATE TABLE IF NOT EXISTS film_genres
(
    film_id  INTEGER,
    genre_id INTEGER,
     PRIMARY KEY (film_id, genre_id)
);

ALTER TABLE film ADD CONSTRAINT FILMS_RATING_FK FOREIGN KEY (rating_id) REFERENCES rating(rating_id) ON DELETE CASCADE;

ALTER TABLE film_genres ADD CONSTRAINT FILMS_FK FOREIGN KEY (film_id) REFERENCES film(film_id) ON DELETE CASCADE;
ALTER TABLE film_genres ADD CONSTRAINT GENRES_FK FOREIGN KEY (genre_id) REFERENCES genre(genre_id) ON DELETE RESTRICT;


